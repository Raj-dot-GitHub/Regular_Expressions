> Methods:

match(): Determine if the RE matches at the beginning of the string.
search(): Scan through a string, looking for any location where this RE matches.
findall(): Find all substrings where the RE matches, and returns them as list.
finditer(): Find all substrings where the RE matches, and returns them as iterator.

> Modification methods:

split(): Returns a list where the string has been split at each match.
sub(): Replaces one or many matches with a string.

> All meta characters: . ^ $ * + { } [ ] \ | ( )

Meta characters have a unique meaning.
. Any character (except newline character)
^ Starts with "^hello"
$ Ends with "world$"
* Zero or more occurrences "aix*"
+ One or more occurrences "aix+"
{ } Exactly the specified number of occurrences "al{2}"
[ ] A set of chgaracters "[a-z]"
\ Special sequence (or escape special characters) "\d"
| Either or "fails|stays"
( ) Capture and group

> Special Characters:

\d : Matches any decimal digits; [0-9].
\D : Matches any non-digit character;
\s : Matches any whitespace character; (space " ", tab "\t", newline "\n")
\S : Matches any non-whitespace character;
\w : Matches any alphanumeric (word) character; [a-zA-Z0-9_].
\W : Matches any non-alhanumeric character;
\b : Matches where the specified characters are at the beginning or at the end of a word r"\bain" r"ain\b"
\B : Matches where the specified characters are present, but NOT at the beginning (or at the end) of a word r"\Bain" r"ain\B"


> Quantifiers:

* : 0 or more
+ : 1 or more
?: 0 or 1, -> Optional character.
{4} : exact number
{4,6} : range numbers (min, max)